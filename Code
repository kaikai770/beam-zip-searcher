import os
import zipfile

def report_match(keyword, file_path, line_no, line_content):
    """Print match info neatly with spacing and clear labels."""
    print("\n" + "=" * 60)
    print(f" Keyword   : {keyword}")
    print(f" File      : {file_path}")
    print(f" Line No.  : {line_no}")
    print(f" Content   : {line_content.strip()}")
    print("=" * 60)

def search_in_zip(zip_path, keywords):
    """Search for keywords inside all .jbeam files in a zip."""
    try:
        with zipfile.ZipFile(zip_path, 'r') as z:
            for file in z.namelist():
                if file.lower().endswith(".jbeam"):
                    try:
                        content = z.read(file).decode("utf-8", errors="ignore")
                        for idx, line in enumerate(content.splitlines(), start=1):
                            for keyword in keywords:
                                if keyword and keyword in line:
                                    location = f"{file} inside {zip_path}"
                                    report_match(keyword, location, idx, line)
                    except:
                        pass
    except zipfile.BadZipFile:
        pass

def walk_and_search(base_folder, keywords):
    """Walk through folder, search in zips and loose .jbeam files."""
    for root, dirs, files in os.walk(base_folder):
        for file in files:
            path = os.path.join(root, file)
            if file.lower().endswith(".zip"):
                search_in_zip(path, keywords)
            elif file.lower().endswith(".jbeam"):
                try:
                    with open(path, "r", encoding="utf-8", errors="ignore") as f:
                        for idx, line in enumerate(f, start=1):
                            for keyword in keywords:
                                if keyword and keyword in line:
                                    report_match(keyword, path, idx, line)
                except:
                    pass

if __name__ == "__main__":
    print("Enter part names / keywords to search for.")
    print("Separate by commas, spaces, or press Enter for multiple lines.")
    raw = input("Keywords: ").strip()

    keywords = []
    if raw:
        if "," in raw:
            keywords = [k.strip() for k in raw.split(",")]
        else:
            keywords = raw.split()
    else:
        print("Enter one keyword per line, blank line to finish:")
        while True:
            kw = input("Keyword: ").strip()
            if not kw:
                break
            keywords.append(kw)

    print("\nEnter folders to search (one per line). Leave blank OR type 'done' when finished:\n")
    search_paths = []
    while True:
        folder = input("Folder path: ").strip('"').strip()
        if not folder or folder.lower() == "done":
            break
        if os.path.isdir(folder):
            search_paths.append(folder)
        else:
            print("[!] That path doesn't exist, try again.")

    print("\nüîç Searching...\n")
    for folder in search_paths:
        walk_and_search(folder, keywords)

    print("\n‚úÖ Search complete.")
